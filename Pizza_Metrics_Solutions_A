select * from customer_orders
select * from pizza_names
select * from pizza_recipes
select * from pizza_toppings
select * from runner_orders
select * from runners
-- A. Pizza Metrics
-- 1. How many pizza were ordered?
select count(pizza_id) AS total_number_of_pizza_ordered from customer_orders
 
-- 2. How many unique customer_orders were made?
select count(distinct order_id) AS number_of_distinct_customer_orders from customer_orders

-- 3. How many successful orders were delivered by each runner?
select ro.runner_id, count(ro.order_id) AS delivered_orders from runner_orders AS ro
where ro.pickup_time != 'NULL'
group by ro.runner_id

-- 4. How many of each type of pizza was delivered?
SELECT 
  pn.pizza_name, 
  COUNT(co.order_id) as total_number_of_delivered_orders
FROM 
  customer_orders as co 
  INNER JOIN pizza_names as pn on co.pizza_id = pn.pizza_id 
  INNER JOIN runner_orders as ro on ro.order_id = co.order_id 
WHERE 
ro.pickup_time != 'null'
GROUP BY 
  pn.pizza_name;

-- 5. How many Vegetarian and MeatLovers were ordered by each customers?
select count(co.pizza_id) as total_number_of_pizzas_ordered, co.customer_id, pn.pizza_name from customer_orders as co
inner join pizza_names as pn on co.pizza_id = pn.pizza_id
group by co.customer_id, pn.pizza_name

-- 6. What was the maximum order of pizzas delivered in a single order?
SELECT 
-- TOP 1
ro.order_id, 
COUNT(co.pizza_id) as number_of_delivered_pizzas
FROM 
customer_orders as co 
INNER JOIN runner_orders as ro on ro.order_id = co.order_id 
WHERE 
ro.pickup_time != 'NULL'
GROUP BY 
ro.order_id 
ORDER BY 
COUNT(co.order_id) DESC 

-- 7. For each customer, how many delivered pizzas had at least 1 change and how many had no changes?
select co.customer_id,
COUNT(CASE WHEN (co.exclusions IS NOT NULL AND co.exclusions !='NULL' AND LEN(co.exclusions)> 0)
        AND (co.extras IS NOT NULL AND co.extras != 'null' AND LEN(co.extras)> 0) THEN co.pizza_id ELSE NULL END) AS number_of_delivered_pizzas_with_one_change,
COUNT(CASE WHEN (co.exclusions IS NULL AND co.exclusions = 'NULL' AND LEN(co.exclusions)> 0)
        AND (co.extras IS NULL AND co.extras = 'NULL' AND LEN(co.extras)> 0) THEN co.pizza_id ELSE NULL END) AS number_of_delivered_pizzas_with_no_chnage
from customer_orders as co
inner join runner_orders as ro on co.order_id = co.order_id
where ro.pickup_time != 'NULL'
group by co.customer_id

-- 8. How many pizzas were delivered that had both exclusions and extras
select COUNT(co.pizza_id) as number_of_pizzas_delivered from customer_orders as co
inner join runner_orders as ro 
on co.order_id = ro.order_id
where ro.pickup_time != 'NULL' 
AND
(co.exclusions IS NOT NULL and co.exclusions != 'NULL' and LEN(co.exclusions)>0) AND
(co.extras IS NOT NULL and co.extras != 'NULL' and LEN(co.extras)>0)
